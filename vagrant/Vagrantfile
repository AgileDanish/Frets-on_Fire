# -*- mode: ruby -*-
# vi: set ft=ruby :

# Get OS family
module OS
    def OS.windows?
        (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
    end

    def OS.mac?
        (/darwin/ =~ RUBY_PLATFORM) != nil
    end

    def OS.unix?
        !OS.windows?
    end

    def OS.linux?
        OS.unix? and not OS.mac?
    end
end

if OS.windows?
    puts "Vagrant launched from windows."
elsif OS.mac?
    puts "Vagrant launched from mac."
elsif OS.unix?
    puts "Vagrant launched from unix."
elsif OS.linux?
    puts "Vagrant launched from linux."
else
    puts "Vagrant launched from unknown platform."
end

Vagrant.configure(2) do |config|

  config.vm.define "ubuntu" do |ubuntu|
    ubuntu.vm.box = "boxcutter/ubuntu1404-desktop"
    ubuntu.vm.synced_folder "../", "/fofix"
    # config.vm.network "forwarded_port", guest: 80, host: 8080
    # config.vm.network "private_network", ip: "192.168.33.10"
    # config.vm.network "public_network"
    
    ubuntu.vm.provider "virtualbox" do |vb|
      if OS.windows?
        vb.customize [
          "modifyvm", :id,
          "--audio", "dsound",
          "--audiocontroller", "ac97"
        ]
      elsif OS.mac?
        vb.customize [
          "modifyvm", :id,
          "--audio", "coreaudio",
          "--audiocontroller", "ac97"
        ]
      elsif OS.unix? || OS.linux?
        vb.customize [
          "modifyvm", :id,
          "--audio", "alsa",
          "--audiocontroller", "ac97"
        ]
      end
    end
  
    ubuntu.vm.provision "shell", inline: <<-SHELL
      sudo apt-get update && sudo apt-get upgrade -y
      sudo apt-get install -y python-pip python-pygame python-opengl python-numpy python-imaging python-dev build-essential cython pkg-config libgl1-mesa-dev libglu1-mesa-dev libglib2.0-dev libsdl1.2-dev libsdl-mixer1.2-dev libogg-dev libvorbisfile3 libtheora-dev libswscale-dev libsoundtouch-dev
      cd /tmp && wget https://github.com/fofix/fretwork/archive/0.1.1.tar.gz -O ./fretwork.tar.gz
      pip install ./fretwork.tar.gz
      pip install cerealizer
      cd /fofix
      python setup.py build_ext --inplace --force
    SHELL
  end

  config.vm.define "osx" do |osx|
    osx.vm.box = "jhcook/osx-elcapitan-10.11"
    osx.vm.synced_folder "../", "/fofix"
    osx.vm.provider "virtualbox" do |vb|
      if OS.windows?
        vb.customize [
          "modifyvm", :id,
          "--audio", "dsound",
          "--audiocontroller", "ac97"
        ]
      elsif OS.mac?
        vb.customize [
          "modifyvm", :id,
          "--audio", "coreaudio",
          "--audiocontroller", "ac97"
        ]
      elsif OS.unix? || OS.linux?
        vb.customize [
          "modifyvm", :id,
          "--audio", "alsa",
          "--audiocontroller", "ac97"
        ]
      end
    end
  end

end
